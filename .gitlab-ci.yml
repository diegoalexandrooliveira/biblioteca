# before_script:
#     - echo "$DOCKER_REGISTRY_PASS" | docker login $DOCKER_REGISTRY --username $DOCKER_REGISTRY_USER --password-stdin

build-clientes:
  stage: build
  script:
    - |
      ULTIMO_COMMIT_REPO=$(git log -1 --format=%cd)
      ULTIMO_COMMIT_CLIENTES=$(git log -1 --format=%cd microservice-clientes)
      if [[ $ULTIMO_COMMIT_REPO = $ULTIMO_COMMIT_CLIENTES ]]
      then
            docker build -t teste-clientes -f microservice-clientes/devops/Dockerfile-CI .
            docker run --name teste-clientes-build -v /var/run/docker.sock:/var/run/docker.sock teste-clientes
            docker cp teste-clientes-build:/app/sources/target/microservice-clientes-0.0.1-SNAPSHOT.jar microservice-clientes/app.jar
            cd microservice-clientes
            docker build -t diegoalexandrooliveira/biblioteca-clientes:latest -f devops/Dockerfile-CD .
            docker rm -f teste-clientes-build
            docker rmi teste-clientes
      else
        echo "Microserviço Clientes não foi alterado"
      fi

build-livros:
  stage: build
  script:
    - |
      ULTIMO_COMMIT_REPO=$(git log -1 --format=%cd)
      ULTIMO_COMMIT_LIVROS=$(git log -1 --format=%cd microservice-livros)
      if [[ $ULTIMO_COMMIT_REPO = $ULTIMO_COMMIT_LIVROS ]]
      then
            docker build -t teste-livros -f microservice-livros/devops/Dockerfile-CI .
            docker run --name teste-livros-build -v /var/run/docker.sock:/var/run/docker.sock teste-livros
            docker cp teste-livros-build:/app/sources/target/microservice-livros-0.0.1-SNAPSHOT.jar microservice-livros/app.jar
            cd microservice-livros
            docker build -t diegoalexandrooliveira/biblioteca-livros:latest -f devops/Dockerfile-CD .
            docker rm -f teste-livros-build
            docker rmi teste-livros
      else
        echo "Microserviço Livros não foi alterado"
      fi